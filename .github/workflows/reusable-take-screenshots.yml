name: take screenshots

on:
  workflow_call:
    inputs:
      urls:
        description: 'target URLs'
        required: true
        type: string
      update-snapshots:
        description: 'update snapshots'
        required: false
        type: boolean
        default: false
      artifact-repository:
        description: 'artifact repository name'
        required: false
        type: string
        default: ''
      artifact-name:
        description: 'artifact repository name'
        required: false
        type: string
        default: ''
      artifact-id:
        description: 'artifact id'
        required: false
        type: string
        default: ''
    secrets:
      github-token:
        required: true
    outputs:
      artifact-id:
        description: 'The artifact ID'
        value: ${{ jobs.take-screenshots.outputs.artifact-id }}
      artifact-url:
        description: 'The artifact URL'
        value: ${{ jobs.take-screenshots.outputs.artifact-url }}
      artifact-digest:
        description: 'The artifact digest'
        value: ${{ jobs.take-screenshots.outputs.artifact-digest }}

jobs:
  take-screenshots:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright@sha256:146d046a8d79a1b3a87596c4457b0b1c47f811bf4fc2cc1b99e873ae7f1cbbbd # v1.51.1-noble
    outputs:
      artifact-id: ${{ steps.upload-playwright-results.outputs.artifact-id }}
      artifact-url: ${{ steps.upload-playwright-results.outputs.artifact-url }}
      artifact-digest: ${{ steps.upload-playwright-results.outputs.artifact-digest }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: sasaplus1-prototype/workflow-screenshot-with-playwright
      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
      - run: npm ci
      - uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}
          path: artifacts
          github-token: ${{ secrets.github-token }}
          repository: ${{ inputs.artifact-repository }}
          run-id: ${{ inputs.artifact-id }}
        continue-on-error: true
      - run: cp -f playwright.config.ts global-setup.ts global-teardown.ts '${{ github.workspace }}'
        continue-on-error: true
        working-directory: artifacts
      - run: npm test ${{ inputs.update-snapshots != 'false' && '-- --update-snapshots' || '' }}
      - run: ls -alR
      - if: ${{ !cancelled() }}
        id: upload-playwright-results
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results
          path: |
            playwright-report
            snapshots
            test-results
          if-no-files-found: ignore 
